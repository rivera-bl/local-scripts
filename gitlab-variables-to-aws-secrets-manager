#!/bin/sh

# # Generate JSON from Gitlab Variables of every project managed by ArgoCD
# using a NOT operation to include the "*" scoped variables
# 1. get all path_with_namespace of the project we want to get the variables from, here we got them from a file that had all the repository URL of the repositories managed by ArgoCD
# 2. get all the projects inside a gitlab group, recursively, using the Gilab API and output to .json file
# 3. use the path_with_namespace to filter the id of the project from the projects.json files
# 4. now with the project_id we can get the variables of a project
# 5. use jq to output as key/value, and use a NOT filter to get the variables from an environment + all

# TODO remove AWS_ACCESS_KEYS, DOCKER_AUTH from secrets/*
# TODO change cencosud-ds for paristech
# TODO remove all null files
mkdir -p secrets
while read line; do
  FILENAME=secrets/$(echo $line | tr '/' '_').json
  PROJECT_ID=$(cat projects100.json | \
    jq --arg line "$line" 'select(.path_with_namespace == $line) | .id')

  curl -s --header "PRIVATE-TOKEN: $GITLAB_PRIVATE_TOKEN" "https://gitlab.com/api/v4/projects/${PROJECT_ID}/variables?per_page=100" | \
    jq '.[] 
      |= select(.environment_scope!="prd" and .environment_scope!="prod" and .environment_scope!="production") 
      | del(..|nulls) 
      | map( { (.key): .value } ) 
      | add' > $FILENAME
        
  echo $PROJECT_ID && cat $FILENAME
done <<< $(cat path_with_namespace.txt)


###########################
###########################
# # 
# # get all projects from cencosud-ds
# while true; do 
#   ((counter++)) 
#   curl -s --header "PRIVATE-TOKEN: $GITLAB_PRIVATE_TOKEN" --request GET "https://gitlab.com/api/v4/groups/3108929/projects?per_page=100&page=${counter}&include_subgroups=true" | jq -r '.[]' >> projects100.json
#   echo $counter
# done
#
# # get path_with_namespace from list of repos to pass to infra
# while read line; do
#   echo $line | awk -F ':' '{print $2}' | cut -d. -f1 >> path_with_namespace.txt
# done <<< $(cat repos.txt)
#
# # create secret with file
# aws secretsmanager create-secret \
#     --name test-deleteme2 \
#     --description "just a test" \
#     --secret-string file://test.json \
#     --region us-east-1
